{"version":3,"sources":["Components/Usercard.js","Components/Followercard.js","Components/Form.js","App.js","serviceWorker.js","index.js"],"names":["Usercard","class","src","this","props","userData","avatar_url","alt","className","login","location","href","html_url","followers","map","item","following","bio","created_at","React","Component","Followercard","type","Form","handleChange","event","setState","target","name","value","handleSubmit","e","preventDefault","searchUser","state","text","onSubmit","action","onChange","placeholder","onClick","App","userName","axios","get","then","response","data","catch","prevProps","prevState","index","key","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"iSAGqBA,E,uKASjB,OACE,yBAAKC,MAAM,iBACT,yBAAKC,IAAKC,KAAKC,MAAMC,SAASC,WAAYC,IAAI,KAC9C,yBAAKC,UAAU,aACb,4BAAKL,KAAKC,MAAMC,SAASI,OACzB,wCAAcN,KAAKC,MAAMC,SAASK,UAClC,sCAAW,uBAAGC,KAAMR,KAAKC,MAAMC,SAASO,UAA7B,IAAyCT,KAAKC,MAAMC,SAASO,WACxE,8CAAoBT,KAAKC,MAAMC,SAASQ,WACvCV,KAAKC,MAAMS,UAAUC,KAAI,SAAAC,GAAI,OAC5B,uBAAGJ,KAAMI,EAAKH,UAAWG,EAAKN,MAA9B,SAEF,yCAAeN,KAAKC,MAAMC,SAASW,WACnC,mCAASb,KAAKC,MAAMC,SAASY,KAC7B,0CAAgBd,KAAKC,MAAMC,SAASa,kB,GAtBRC,IAAMC,WCAvBC,E,uKAOjB,OACE,yBAAKpB,MAAM,qBACT,yBAAKC,IAAKC,KAAKC,MAAMC,SAASC,WAAYC,IAAI,KAC9C,yBAAKC,UAAU,aACb,4BAAKL,KAAKC,MAAMC,SAASI,OACzB,sCAAW,uBAAGE,KAAMR,KAAKC,MAAMC,SAASO,UAA7B,IAAyCT,KAAKC,MAAMC,SAASO,WACxE,oCAAUT,KAAKC,MAAMC,SAASiB,Y,GAbEH,IAAMC,W,QCgDjCG,E,kDA7Cb,WAAYnB,GACX,IAAD,8BACE,cAAMA,IAIRoB,aAAe,SAACC,GAEd,EAAKC,SAAL,eACGD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SARtC,EAYAC,aAAe,SAACC,GAEdA,EAAEC,iBACF,EAAK5B,MAAM6B,WAAWF,EAAG,EAAKG,MAAMC,MACpC,EAAKT,SAAS,CACZS,KAAM,MAfR,EAAKD,MAAO,CAACC,KAAK,IAFpB,E,qDAuBE,OAEE,6BACE,iDACA,0BAAMC,SAAUjC,KAAK2B,aAAcO,OAAO,IACxC,2BAAOT,KAAK,OACVN,KAAK,OACLgB,SAAUnC,KAAKqB,aACfe,YAAY,WACZV,MAAO1B,KAAK+B,MAAMC,OACpB,4BAAQK,QAASrC,KAAK2B,cAAtB,aACA,6BACA,mC,GAvCSX,IAAMC,WC8GVqB,G,wDAvGb,aACC,IAAD,8BACE,gBA2DFR,WAAa,SAACF,EAAGI,GAEfJ,EAAEC,iBAEF,EAAKN,SAAS,CACZgB,SAAU,CAACP,MA/Db,EAAKD,MAAQ,CACX7B,SAAU,GACVQ,UAAW,GACX6B,SAAU,cALd,E,gEAWC,IAAD,OAEEC,IAAMC,IAAN,uCAA0CzC,KAAK+B,MAAMQ,WAClDG,MAAK,SAAAC,GAEJ,EAAKpB,SAAS,CACZrB,SAAUyC,EAASC,UAItBC,MAAM,iBAETL,IAAMC,IAAN,qCAAwCzC,KAAK+B,MAAMQ,SAAnD,eACGG,MAAK,SAAAC,GAEJ,EAAKpB,SAAS,CACZb,UAAWiC,EAASC,Y,yCAMTE,EAAWC,GAC7B,IAAD,OACMA,EAAUR,WAAavC,KAAK+B,MAAMQ,WAEpCC,IAAMC,IAAN,uCAA0CzC,KAAK+B,MAAMQ,WAClDG,MAAK,SAAAC,GAEJ,EAAKpB,SAAS,CACZrB,SAAUyC,EAASC,UAItBC,MAAM,iBAETL,IAAMC,IAAN,qCAAwCzC,KAAK+B,MAAMQ,SAAnD,eACGG,MAAK,SAAAC,GAEJ,EAAKpB,SAAS,CACZb,UAAWiC,EAASC,a,+BA0B5B,OACE,yBAAKvC,UAAU,OACb,yBAAKA,UAAU,aACb,gDACA,kBAAC,EAAD,CAAMyB,WAAY9B,KAAK8B,aACvB,oCACA,yBAAKzB,UAAU,SACb,kBAAC,EAAD,CAAUH,SAAUF,KAAK+B,MAAM7B,SAAUQ,UAAWV,KAAK+B,MAAMrB,aAEjE,0CACA,yBAAKL,UAAU,SACZL,KAAK+B,MAAMrB,UAAUC,KAAI,SAACC,EAAMoC,GAG/B,OAAQ,kBAAC,EAAD,CAAcC,IAAKD,EAAO9C,SAAUU,EAAMF,UAAW,e,GA9FzDM,IAAMC,YCIJiC,QACW,cAA7BC,OAAO5C,SAAS6C,UAEe,UAA7BD,OAAO5C,SAAS6C,UAEhBD,OAAO5C,SAAS6C,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnB,MAAK,SAAAoB,GACJA,EAAaC,gBAEdlB,OAAM,SAAAmB,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f667e456.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nexport default class Usercard extends React.Component\r\n{\r\n\r\n\r\n  render()\r\n  {\r\n    // console.log(\"This props\", this.props)\r\n\r\n\r\n    return (\r\n      <div class=\"card usercard\">\r\n        <img src={this.props.userData.avatar_url} alt=\"\" />\r\n        <div className=\"card-info\">\r\n          <h3>{this.props.userData.login}</h3>\r\n          <p>Location: {this.props.userData.location}</p>\r\n          <p>Profile:<a href={this.props.userData.html_url}> {this.props.userData.html_url}</a></p>\r\n          <p>follower count: {this.props.userData.followers}</p>\r\n          {this.props.followers.map(item =>\r\n            <a href={item.html_url}>{item.login}, </a>\r\n          )}\r\n          <p>following: {this.props.userData.following}</p>\r\n          <p>bio: {this.props.userData.bio}</p>\r\n          <p>User Since: {this.props.userData.created_at}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react'\r\n\r\n\r\nexport default class Followercard extends React.Component\r\n{\r\n\r\n\r\n  render()\r\n  {\r\n\r\n    return (\r\n      <div class=\"card followercard\">\r\n        <img src={this.props.userData.avatar_url} alt=\"\" />\r\n        <div className=\"card-info\">\r\n          <h3>{this.props.userData.login}</h3>\r\n          <p>Profile:<a href={this.props.userData.html_url}> {this.props.userData.html_url}</a></p>\r\n          <p>Type: {this.props.userData.type}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react'\r\n\r\n\r\nclass Form extends React.Component\r\n{\r\n\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state ={text:\"\"}\r\n  }\r\n\r\n  handleChange = (event) =>\r\n  {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) =>\r\n  {\r\n    e.preventDefault()\r\n    this.props.searchUser(e, this.state.text)\r\n    this.setState({\r\n      text: \"\"\r\n    })  \r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n\r\n      <div>\r\n        <h1>Welcome to Today </h1>\r\n        <form onSubmit={this.handleSubmit} action=\"\">\r\n          <input name=\"text\"\r\n            type=\"text\"\r\n            onChange={this.handleChange}\r\n            placeholder=\"UserName\"\r\n            value={this.state.text} />\r\n          <button onClick={this.handleSubmit}  >Find User</button>\r\n          <br/>\r\n          <br/>\r\n\r\n        </form>\r\n        {/* <p>{this.props.todo.task}</p> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form","import React from 'react';\nimport axios from \"axios\"\nimport Usercard from './Components/Usercard'\nimport Followercard from './Components/Followercard'\nimport Form from './Components/Form'\nimport './App.css';\n\n\nclass App extends React.Component\n{\n  constructor()\n  {\n    super()\n    this.state = {\n      userData: [],\n      followers: [],\n      userName: \"GeraldRyan\"\n    }\n  }\n\n\n  componentDidMount()\n  {\n\n    axios.get(`https://api.github.com/users/${this.state.userName}`)\n      .then(response =>\n      {\n        this.setState({\n          userData: response.data\n        })\n        // console.log(response.data)\n      })\n      .catch(\"You caught me\")\n\n    axios.get(`https:api.github.com/users/${this.state.userName}/followers`)\n      .then(response =>\n      {\n        this.setState({\n          followers: response.data\n        })\n        // console.log(response.data)\n      })\n  }\n\n  componentDidUpdate(prevProps, prevState)\n  {\n    if (prevState.userName !== this.state.userName)\n    {\n      axios.get(`https://api.github.com/users/${this.state.userName}`)\n        .then(response =>\n        {\n          this.setState({\n            userData: response.data\n          })\n          // console.log(response.data)\n        })\n        .catch(\"You caught me\")\n\n      axios.get(`https:api.github.com/users/${this.state.userName}/followers`)\n        .then(response =>\n        {\n          this.setState({\n            followers: response.data\n          })\n          // console.log(response.data)\n        })\n    }\n  }\n\n\n\n  searchUser = (e, text) =>\n  {\n    e.preventDefault()\n\n    this.setState({\n      userName: [text]\n    })\n    // console.log(\"t is for task:\", t)  //pass\n    // console.log(\"tasks:\", this.state.tasks)  //pass\n    // console.log(\"newTask:\", newTask) //pass\n  }\n\n\n  render()\n  {\n\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <h1>Github User Info</h1>\n          <Form searchUser={this.searchUser}></Form>\n          <h2>User</h2>\n          <div className=\"cards\">\n            <Usercard userData={this.state.userData} followers={this.state.followers}></Usercard>\n          </div>\n          <h2>Followers:</h2>\n          <div className=\"cards\">\n            {this.state.followers.map((item, index) =>\n            {\n              // console.log(\"item\",item)\n              return (<Followercard key={index} userData={item} followers={[]}></Followercard>)\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}